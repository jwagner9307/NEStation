{"version":3,"sources":["widgets/Controls.module.css","widgets/Header.module.css","emulator/Screen.js","emulator/FrameTimer.js","emulator/Speakers.js","emulator/controllers/Controller.js","emulator/controllers/LocalController.js","locales/index.js","locales/strings.js","emulator/index.js","emulator/Emulator.js","widgets/BalloonMessage.js","widgets/Header.js","networking/transfer/Send.js","networking/transfer/Receive.js","networking/MasterSyncer.js","networking/SlaveSyncer.js","gui/InviteHeader.js","gui/JoinHeader.js","widgets/KeyBinding.js","gui/Settings.js","gui/Overlay.js","widgets/TVNoise.js","gui/helpers/index.js","gui/helpers/cleanQueryString.js","gui/helpers/ellipsize.js","widgets/Controls.js","widgets/SettingsButton.js","gui/PlayScreen.js","App.js","index.js","gui/PlayScreen.module.css","gui/Overlay.module.css","gui/Settings.module.css","widgets/BalloonMessage.module.css","events/bus.js","events/index.js","emulator/Screen.module.css","assets/halu.svg","widgets/SettingsButton.module.css","config.js"],"names":["module","exports","controls","title","controller","dpad","buttons","centered","header","small","message","titleLogo","titleText","link","Screen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setBuffer","bind","assertThisInitialized","writeBuffer","_this2","react_default","a","createElement","className","styles","screen","width","height","ref","canvas","_initCanvas","buffer","y","x","i","buf32","imageData","data","set","buf8","context","putImageData","getContext","getImageData","fillStyle","fillRect","buf","ArrayBuffer","length","Uint8ClampedArray","Uint32Array","Component","FPS","FrameTimer","onFrame","fps","arguments","undefined","_run","_isRunning","_frameId","requestAnimationFrame","now","Date","elapsedTime","_lastTime","_interval","_fps","_startTime","cancelAnimationFrame","BUFFER_SIZE","Speakers","bufferSize","RingBuffer","writeSample","_onAudioProcess","audioCtx","window","AudioContext","scriptNode","createScriptProcessor","onaudioprocess","gainNode","createGain","gain","value","config","sound","connect","destination","bus","on","disconnect","close","catch","console","error","removeListener","sampleRate","left","right","size","deqN","enq","event","samples","outputBuffer","getChannelData","e","BITS","Controller","player","getNes","BUTTON_A","BUTTON_B","BUTTON_SELECT","BUTTON_START","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT","byte","sync","button","isPressed","nes","buttonDown","jsnes","buttonUp","syncAll","toByte","source","LocalController","onStart","_processGamepadIfPossible","gamepad","_","first","navigator","getGamepads","mapping","usesGamepad","confirm","concat","id","emit","pressed","_setButton","_onKeyDown","keyMap","key","_onKeyUp","isMaster","needsSwap","immediateButtons","clone","options","input","otherController","otherPlayer","resync","esm_get","prototype","$gamepadInterval","setInterval","addEventListener","removeEventListener","clearInterval","_sync","strings","buffering","connected","connecting","copied","crtEffect","dragARomHere","enabled_false","enabled_true","errors","connectionFailed","invalidRom","serverIsDown","loading","pressStart","setDefaults","settings","shareThis","swap","swapButton","toPlayWithSomeone","waiting","yourController","Emulator","localController","onStartPressed","remoteController","Screen_Screen","_initialize","attach","nextProps","stop","frameTimer","start","speakers","frame","onError","detach","_this3","_this$props","rom","bytes","Buffer","from","toString","NES","onAudioSample","getSampleRate","syncer","loadROM","emulator","BalloonMessage","children","classNames","balloon","character","src","haluImage","alt","Header","state","isEmpty","BalloonMessage_BalloonMessage","href","target","rel","tabIndex","Send","channel","_sent","_total","byteLength","send","remaining","Math","min","chunk","slice","Receive","_received","_appendBuffer","buffer1","buffer2","tmp","Uint8Array","STATE","MasterSyncer","_reset","_onData","masterBufferLimit","_state","_blindFrames","_runFrame","_transfer","run","initializeRom","_emulator","swapWith","_buffer","excess","shift","remoteButtons","remoteControllerNeedsSwap","onSwap","_start","push","EventEmitter","SlaveSyncer","_hasPressedStart","_config$buffering","minBufferSize","maxBufferSize","_isBuffering","localButtons","remotePlayer","COPIED_MESSAGE_TIME","InviteHeader","token","isDown","_copyLink","preventDefault","clipboard","writeText","setState","setTimeout","needsRom","_this$state","Header_Header","onClick","onSyncer","onConnectionError","quickp2p","createChannel","JoinHeader","joinChannel","KeyBinding","_onAssign","isAssigning","onAssignCancel","onAssignStart","displayName","_this$props$verticalM","verticalMirror","type","style","transform","display","DEFAULT_SCREEN_WIDTH","BUTTONS","name","Settings","mappingButton","_onClose","_onSetDefaults","reset","_notify","oldKey","findKey","it","newKey","save","_onResize","innerWidth","element","document","querySelector","scale","closeButton","setDefaultsButton","soundOptions","map","checked","onChange","_update","bufferingOptions","crt","KeyBinding_KeyBinding","property","container","classList","add","remove","forceUpdate","Overlay","isSettingsMenuOpen","isLoading","isVisible","overlay","show","loader","dark","Settings_Settings","react_loader_spinner_default","color","TVNoise","borderRadius","self","toggle","loop","ctx","w","h","idata","createImageData","buffer32","len","random","noise","helpers","cleanQueryString","url","location","replace","substring","indexOf","history","replaceState","ellipsize","string","limit","FRIENDLY_NAMES","ArrowLeft","ArrowRight","ArrowUp","ArrowDown"," ","Controls","_onGamepadConnected","blink","upKey","_keyFor","isUpArrow","Fragment","_format","toUpperCase","SettingsButton","_onClick","require","default","PlayScreen","_onSyncer","_loadRom","initializeEmulator","_onFileDrop","file","dataTransfer","files","reader","FileReader","onload","result","updateRom","readAsArrayBuffer","_ignore","stopPropagation","_onStartPressed","_onError","app","JoinHeader_JoinHeader","InviteHeader_InviteHeader","main","gameContainer","Overlay_Overlay","src_emulator","TVNoise_TVNoise","Controls_Controls","menu","SettingsButton_SettingsButton","callback","noop","setStore","SimpleStore","App","hash","startsWith","PlayScreen_PlayScreen","inviteToken","_listener","querystring","parse","search","PureComponent","ReactDOM","render","App_App","getElementById","__webpack_require__","p","Config","C_Work_nestation_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","defaultOptions","load","localStorage","setItem","JSON","stringify","getItem","find","d","Delete","Enter","r","__webpack_exports__"],"mappings":"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","file":"static/js/main.a32b5951.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2Z41f\",\"title\":\"Controls_title__kk3Y5\",\"controller\":\"Controls_controller__35wyc\",\"dpad\":\"Controls_dpad__XQjat\",\"buttons\":\"Controls_buttons__x_aTK\",\"centered\":\"Controls_centered__3mb8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2tevk\",\"small\":\"Header_small__1uQvM\",\"message\":\"Header_message__3NbkN\",\"title\":\"Header_title__ILaB2\",\"titleLogo\":\"Header_titleLogo__2pj7o\",\"titleText\":\"Header_titleText__qd3rx\",\"link\":\"Header_link__slmNi\"};","import React, { Component } from \"react\";\r\nimport styles from \"./Screen.module.css\";\r\n\r\nconst SCREEN_WIDTH = 256;\r\nconst SCREEN_HEIGHT = 240;\r\nconst FULL_ALPHA = 0xff000000;\r\n\r\nexport default class Screen extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.setBuffer = this.setBuffer.bind(this);\r\n\t\tthis.writeBuffer = this.writeBuffer.bind(this);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<canvas\r\n\t\t\t\tclassName={styles.screen}\r\n\t\t\t\twidth={SCREEN_WIDTH}\r\n\t\t\t\theight={SCREEN_HEIGHT}\r\n\t\t\t\tref={(canvas) => {\r\n\t\t\t\t\tif (canvas) this._initCanvas(canvas);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tsetBuffer(buffer) {\r\n\t\tfor (let y = 0; y < SCREEN_HEIGHT; ++y) {\r\n\t\t\tfor (let x = 0; x < SCREEN_WIDTH; ++x) {\r\n\t\t\t\tconst i = y * 256 + x;\r\n\t\t\t\t// Convert pixel from NES BGR to canvas ABGR\r\n\t\t\t\tthis.buf32[i] = FULL_ALPHA | buffer[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twriteBuffer() {\r\n\t\tthis.imageData.data.set(this.buf8);\r\n\t\tthis.context.putImageData(this.imageData, 0, 0);\r\n\t}\r\n\r\n\t_initCanvas(canvas) {\r\n\t\tthis.context = canvas.getContext(\"2d\");\r\n\t\tthis.imageData = this.context.getImageData(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tSCREEN_WIDTH,\r\n\t\t\tSCREEN_HEIGHT\r\n\t\t);\r\n\r\n\t\t// Set alpha to opaque\r\n\t\tthis.context.fillStyle = \"black\";\r\n\t\tthis.context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n\t\t// Buffer to write on next animation frame\r\n\t\tthis.buf = new ArrayBuffer(this.imageData.data.length);\r\n\r\n\t\t// Get the canvas buffer in 8bit and 32bit\r\n\t\tthis.buf8 = new Uint8ClampedArray(this.buf);\r\n\t\tthis.buf32 = new Uint32Array(this.buf);\r\n\r\n\t\t// Set alpha\r\n\t\tfor (let i = 0; i < this.buf32.length; ++i) {\r\n\t\t\tthis.buf32[i] = FULL_ALPHA;\r\n\t\t}\r\n\t}\r\n}\r\n","const FPS = 60.098;\r\n\r\nexport default class FrameTimer {\r\n\tconstructor(onFrame, fps = FPS) {\r\n\t\tthis.onFrame = onFrame;\r\n\r\n\t\tthis._fps = fps;\r\n\t\tthis._interval = 1000 / fps;\r\n\t\tthis._lastTime = Date.now();\r\n\t\tthis._startTime = this._lastTime;\r\n\t\tthis._isRunning = false;\r\n\t}\r\n\r\n\tstart() {\r\n\t\tthis._isRunning = true;\r\n\t\tthis._run();\r\n\t}\r\n\r\n\tstop() {\r\n\t\tthis._isRunning = false;\r\n\t\tcancelAnimationFrame(this._frameId);\r\n\t}\r\n\r\n\t_run = () => {\r\n\t\tif (!this._isRunning) return;\r\n\t\tthis._frameId = requestAnimationFrame(this._run);\r\n\r\n\t\tconst now = Date.now();\r\n\t\tconst elapsedTime = now - this._lastTime;\r\n\r\n\t\tif (elapsedTime > this._interval) {\r\n\t\t\tthis._lastTime = now - (elapsedTime % this._interval);\r\n\t\t\tthis.onFrame();\r\n\t\t}\r\n\t};\r\n}\r\n","import RingBuffer from \"ringbufferjs\";\r\nimport config from \"../config\";\r\nimport bus from \"../events\";\r\n\r\nconst BUFFER_SIZE = 8192;\r\nconst DEFAULT_SAMPLE_RATE = 44100;\r\n\r\nexport default class Speakers {\r\n\tconstructor() {\r\n\t\tthis.bufferSize = BUFFER_SIZE;\r\n\t\tthis.buffer = new RingBuffer(this.bufferSize * 2);\r\n\r\n\t\tthis.writeSample = this.writeSample.bind(this);\r\n\t\tthis._onAudioProcess = this._onAudioProcess.bind(this);\r\n\t}\r\n\r\n\tstart() {\r\n\t\tif (this.audioCtx) return;\r\n\t\tif (!window.AudioContext) return; // (audio is not supported)\r\n\r\n\t\tthis.audioCtx = new window.AudioContext();\r\n\t\tthis.scriptNode = this.audioCtx.createScriptProcessor(1024, 0, 2);\r\n\t\tthis.scriptNode.onaudioprocess = this._onAudioProcess;\r\n\t\tthis.gainNode = this.audioCtx.createGain();\r\n\t\tthis.gainNode.gain.value = config.sound.gain;\r\n\t\tthis.gainNode.connect(this.audioCtx.destination);\r\n\t\tthis.scriptNode.connect(this.gainNode);\r\n\r\n\t\tbus.on(\r\n\t\t\t\"volume\",\r\n\t\t\t(gain) => this.gainNode && (this.gainNode.gain.value = gain)\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\tif (this.scriptNode) {\r\n\t\t\tthis.gainNode.disconnect(this.audioCtx.destination);\r\n\t\t\tthis.scriptNode.disconnect(this.gainNode);\r\n\t\t\tthis.scriptNode.onaudioprocess = null;\r\n\t\t\tthis.scriptNode = null;\r\n\t\t\tthis.gainNode = null;\r\n\t\t}\r\n\r\n\t\tif (this.audioCtx) {\r\n\t\t\tthis.audioCtx.close().catch(console.error);\r\n\t\t\tthis.audioCtx = null;\r\n\t\t}\r\n\r\n\t\tbus.removeListener(\"volume\");\r\n\t}\r\n\r\n\tgetSampleRate() {\r\n\t\tif (!window.AudioContext) return DEFAULT_SAMPLE_RATE;\r\n\r\n\t\tconst context = new window.AudioContext();\r\n\t\tconst sampleRate = context.sampleRate;\r\n\t\tcontext.close();\r\n\r\n\t\treturn sampleRate;\r\n\t}\r\n\r\n\twriteSample(left, right) {\r\n\t\tif (this.buffer.size() / 2 >= this.bufferSize) {\r\n\t\t\t// buffer overrun\r\n\t\t\tthis.buffer.deqN(this.bufferSize / 2);\r\n\t\t}\r\n\r\n\t\tthis.buffer.enq(left);\r\n\t\tthis.buffer.enq(right);\r\n\t}\r\n\r\n\t_onAudioProcess(event) {\r\n\t\tconst left = event.outputBuffer.getChannelData(0);\r\n\t\tconst right = event.outputBuffer.getChannelData(1);\r\n\t\tconst size = left.length;\r\n\r\n\t\tlet samples;\r\n\t\ttry {\r\n\t\t\tsamples = this.buffer.deqN(size * 2);\r\n\t\t} catch (e) {\r\n\t\t\t// buffer underrun (needed {size}, got {this.buffer.size() / 2})\r\n\t\t\t// ignore empty buffers... assume audio has just stopped\r\n\r\n\t\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\t\tleft[i] = 0;\r\n\t\t\t\tright[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tleft[i] = samples[i * 2];\r\n\t\t\tright[i] = samples[i * 2 + 1];\r\n\t\t}\r\n\t}\r\n}\r\n","import jsnes from \"jsnes\";\n\nconst BITS = [\n\t0b00000001,\n\t0b00000010,\n\t0b00000100,\n\t0b00001000,\n\t0b00010000,\n\t0b00100000,\n\t0b01000000,\n\t0b10000000\n];\n\nexport default class Controller {\n\tconstructor(player = 1, getNes) {\n\t\tthis.player = player;\n\t\tthis.getNes = getNes;\n\n\t\tthis.buttons = {\n\t\t\tBUTTON_A: false,\n\t\t\tBUTTON_B: false,\n\t\t\tBUTTON_SELECT: false,\n\t\t\tBUTTON_START: false,\n\t\t\tBUTTON_UP: false,\n\t\t\tBUTTON_DOWN: false,\n\t\t\tBUTTON_LEFT: false,\n\t\t\tBUTTON_RIGHT: false\n\t\t};\n\t}\n\n\tsyncAll(byte) {\n\t\tthis.sync(\"BUTTON_A\", !!(byte & BITS[0]));\n\t\tthis.sync(\"BUTTON_B\", !!(byte & BITS[1]));\n\t\tthis.sync(\"BUTTON_SELECT\", !!(byte & BITS[2]));\n\t\tthis.sync(\"BUTTON_START\", !!(byte & BITS[3]));\n\t\tthis.sync(\"BUTTON_UP\", !!(byte & BITS[4]));\n\t\tthis.sync(\"BUTTON_DOWN\", !!(byte & BITS[5]));\n\t\tthis.sync(\"BUTTON_LEFT\", !!(byte & BITS[6]));\n\t\tthis.sync(\"BUTTON_RIGHT\", !!(byte & BITS[7]));\n\t}\n\n\tsync(button, isPressed) {\n\t\tconst nes = this.getNes();\n\n\t\tthis.buttons[button] = isPressed;\n\n\t\tif (isPressed) nes.buttonDown(this.player, jsnes.Controller[button]);\n\t\telse nes.buttonUp(this.player, jsnes.Controller[button]);\n\t}\n\n\tresync() {\n\t\tthis.syncAll(this.toByte());\n\t}\n\n\ttoByte(source = this.buttons) {\n\t\treturn (\n\t\t\t(source.BUTTON_A && BITS[0]) |\n\t\t\t(source.BUTTON_B && BITS[1]) |\n\t\t\t(source.BUTTON_SELECT && BITS[2]) |\n\t\t\t(source.BUTTON_START && BITS[3]) |\n\t\t\t(source.BUTTON_UP && BITS[4]) |\n\t\t\t(source.BUTTON_DOWN && BITS[5]) |\n\t\t\t(source.BUTTON_LEFT && BITS[6]) |\n\t\t\t(source.BUTTON_RIGHT && BITS[7])\n\t\t);\n\t}\n}\n","import Controller from \"./Controller\";\nimport config from \"../../config\";\nimport bus from \"../../events\";\nimport _ from \"lodash\";\n\nexport default class LocalController extends Controller {\n\tconstructor(player, getNes, onStart = () => {}) {\n\t\tsuper(player, getNes);\n\n\t\tthis.isMaster = true;\n\t\tthis.needsSwap = false;\n\t\tthis.immediateButtons = _.clone(this.buttons);\n\t\tthis.onStart = onStart;\n\t\tthis.keyMap = config.options.input;\n\t}\n\n\tswapWith(otherController) {\n\t\tconst otherPlayer = otherController.player;\n\t\totherController.player = this.player;\n\t\tthis.player = otherPlayer;\n\n\t\tthis.needsSwap = false;\n\t\tthis.resync();\n\t\totherController.resync();\n\t\treturn otherPlayer;\n\t}\n\n\tresync() {\n\t\tthis.syncAll(super.toByte());\n\t}\n\n\ttoByte() {\n\t\treturn super.toByte(this.immediateButtons);\n\t}\n\n\tattach() {\n\t\tthis.$gamepadInterval = setInterval(this._processGamepadIfPossible, 10);\n\n\t\twindow.addEventListener(\"keydown\", this._onKeyDown);\n\t\twindow.addEventListener(\"keyup\", this._onKeyUp);\n\t\tbus.on(\"keymap-updated\", () => (this.keyMap = config.options.input));\n\t}\n\n\tdetach() {\n\t\twindow.removeEventListener(\"keydown\", this._onKeyDown);\n\t\twindow.removeEventListener(\"keyup\", this._onKeyUp);\n\t\tbus.removeListener(\"keymap-updated\");\n\t\tclearInterval(this.$gamepadInterval);\n\t}\n\n\t_processGamepadIfPossible = () => {\n\t\tconst gamepad = _.first(navigator.getGamepads());\n\t\tif (!gamepad || gamepad.mapping !== \"standard\") return;\n\n\t\tif (window.usesGamepad === undefined) {\n\t\t\twindow.usesGamepad = window.confirm(`Use ${gamepad.id}?`);\n\t\t\tif (window.usesGamepad) bus.emit(\"gamepad\");\n\t\t}\n\t\tif (!window.usesGamepad) return;\n\n\t\tconst isPressed = (id) => gamepad.buttons[id].pressed;\n\n\t\tthis._setButton(\"BUTTON_A\", isPressed(1));\n\t\tthis._setButton(\"BUTTON_B\", isPressed(0));\n\t\tthis._setButton(\"BUTTON_SELECT\", isPressed(8));\n\t\tthis._setButton(\"BUTTON_START\", isPressed(9));\n\t\tthis._setButton(\"BUTTON_UP\", isPressed(12));\n\t\tthis._setButton(\"BUTTON_DOWN\", isPressed(13));\n\t\tthis._setButton(\"BUTTON_LEFT\", isPressed(14));\n\t\tthis._setButton(\"BUTTON_RIGHT\", isPressed(15));\n\t\tthis._setButton(\"SWAP\", isPressed(5));\n\t};\n\n\t_onKeyDown = (e) => {\n\t\tif (window.usesGamepad) return;\n\n\t\tconst button = this.keyMap[e.key];\n\t\tif (!button) return;\n\n\t\tthis._setButton(button, true);\n\t};\n\n\t_onKeyUp = (e) => {\n\t\tif (window.usesGamepad) return;\n\n\t\tconst button = this.keyMap[e.key];\n\t\tif (!button) return;\n\n\t\tthis._setButton(button, false);\n\t};\n\n\t_setButton(button, isPressed) {\n\t\tif (button === \"BUTTON_START\" && isPressed) this.onStart();\n\t\tif (button === \"SWAP\") {\n\t\t\tif (this.player === 1 && isPressed) this.needsSwap = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sync(button, isPressed);\n\t}\n\n\t_sync(button, isPressed) {\n\t\tthis.immediateButtons[button] = isPressed;\n\t\tif (this.isMaster) this.sync(button, isPressed);\n\t}\n}\n","import strings from \"./strings\";\r\n\r\nexport default strings;\r\n","export default {\n\tbuffering: \"Buffering\",\n\tconnected: \"Connected!\",\n\tconnecting: \"Connecting...\",\n\tcontrols: \"-Controls-\",\n\tcopied: \"Copied!\",\n\tcrtEffect: \"CRT Effect\",\n\tdragARomHere: \"Drag a NES ROM file here!\",\n\tenabled_false: \"Disabled\",\n\tenabled_true: \"Enabled\",\n\terrors: {\n\t\tconnectionFailed: \"CONNECTION FAILED :(\",\n\t\tinvalidRom: \"INVALID ROM :(\",\n\t\tserverIsDown: \"The server is down :(\"\n\t},\n\tinput: \"Input\",\n\tlink: \"link\",\n\tloading: \"Loading...\",\n\tpressStart: \"PRESS START\",\n\tsetDefaults: \"Set defaults\",\n\tsettings: \"Settings\",\n\tshareThis: \"Share this\",\n\tsound: \"Sound\",\n\tswap: \"Swap\",\n\tswapButton: \"RB\",\n\ttoPlayWithSomeone: \"to play with someone!\",\n\twaiting: \"WAITING...\",\n\tyourController: \"Your controller\"\n};\n","import Emulator from \"./Emulator\";\r\n\r\nexport default Emulator;\r\n","import React, { Component } from \"react\";\nimport { Buffer } from \"buffer\";\nimport Screen from \"./Screen\";\nimport FrameTimer from \"./FrameTimer\";\nimport Speakers from \"./Speakers\";\nimport { Controller, LocalController } from \"./controllers\";\nimport strings from \"../locales\";\nimport jsnes, { NES } from \"jsnes\";\n\nexport default class Emulator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst getNes = () => this.nes;\n\t\tthis.localController = new LocalController(1, getNes, props.onStartPressed);\n\t\tthis.remoteController = new Controller(2, getNes);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Screen\n\t\t\t\tref={(screen) => {\n\t\t\t\t\tif (screen) this._initialize(screen);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.localController.attach();\n\t}\n\n\tcomponentWillUpdate(nextProps) {\n\t\tthis.stop();\n\t}\n\n\tstart() {\n\t\tthis.frameTimer.start();\n\t\tthis.speakers.start();\n\t}\n\n\tstop() {\n\t\tthis.frameTimer.stop();\n\t\tthis.speakers.stop();\n\t}\n\n\tframe() {\n\t\ttry {\n\t\t\tthis.nes.frame();\n\t\t\tthis.screen.writeBuffer();\n\t\t} catch (e) {\n\t\t\tthis.props.onError(strings.errors.invalidRom, false);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.stop();\n\t\tthis.localController.detach();\n\t}\n\n\t_initialize(screen) {\n\t\tconst { rom, onError } = this.props;\n\t\tif (!rom) return;\n\t\tconst bytes = Buffer.from(rom).toString(\"binary\");\n\n\t\tthis.screen = screen;\n\n\t\tthis.speakers = new Speakers();\n\n\t\tthis.nes = new NES({\n\t\t\tonFrame: this.screen.setBuffer,\n\t\t\tonAudioSample: this.speakers.writeSample,\n\t\t\tsampleRate: this.speakers.getSampleRate()\n\t\t});\n\n\t\tthis.frameTimer = new FrameTimer(() => {\n\t\t\tconst { syncer } = this.props;\n\n\t\t\tif (syncer) syncer.sync();\n\t\t\telse this.frame();\n\t\t});\n\n\t\t// Load ROM data as a string and start\n\t\ttry {\n\t\t\tthis.nes.loadROM(bytes);\n\t\t} catch (e) {\n\t\t\tonError(strings.errors.invalidRom, false);\n\t\t}\n\n\t\t// DEBUG\n\t\twindow.emulator = this;\n\t\twindow.jsnes = jsnes;\n\t}\n}\n","import React, { Component } from \"react\";\r\nimport styles from \"./BalloonMessage.module.css\";\r\nimport haluImage from \"../assets/halu.svg\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class BalloonMessage extends Component {\r\n\trender() {\r\n\t\tconst { children } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"message -left\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\tstyles.balloon,\r\n\t\t\t\t\t\t\"nes-balloon\",\r\n\t\t\t\t\t\t\"from-left\",\r\n\t\t\t\t\t\t\"is-small\"\r\n\t\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p>{children}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<img className={styles.character} src={haluImage} alt=\"character\" />\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\nimport BalloonMessage from \"./BalloonMessage\";\nimport styles from \"./Header.module.css\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\n\nexport default class Header extends Component {\n\tstate = { bytes: null };\n\n\trender() {\n\t\tconst { children } = this.props;\n\n\t\treturn (\n\t\t\t<div className={styles.header}>\n\t\t\t\t<div className={styles.small}>\n\t\t\t\t\t{!_.isEmpty(children) && (\n\t\t\t\t\t\t<BalloonMessage\n\t\t\t\t\t\t\tclassName={classNames(styles.message, styles.small)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</BalloonMessage>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<h2 className={styles.title}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className={classNames(styles.titleLogo, \"nes-logo\")} />\n\t\t\t\t\t\t<span className={styles.titleText}>NEStation</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://github.com/rodri042/nestation#nestation\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t\tstyles.link,\n\t\t\t\t\t\t\t\t\tstyles.titleLogo,\n\t\t\t\t\t\t\t\t\t\"nes-octocat\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const CHUNK_SIZE = 1024;\r\n\r\nexport default class Send {\r\n\tconstructor(rom, channel) {\r\n\t\tthis.rom = rom;\r\n\t\tthis.channel = channel;\r\n\r\n\t\tthis._sent = 0;\r\n\t\tthis._total = rom.byteLength;\r\n\t}\r\n\r\n\trun() {\r\n\t\tif (this._sent === this._total) {\r\n\t\t\tthis.channel.send(\"end\");\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst remaining = this._total - this._sent;\r\n\t\tconst size = Math.min(CHUNK_SIZE, remaining);\r\n\t\tconst chunk = this.rom.slice(this._sent, this._sent + size);\r\n\r\n\t\tthis._sent += size;\r\n\t\tthis.channel.send(chunk);\r\n\t}\r\n\r\n\tget transferred() {\r\n\t\treturn this._sent;\r\n\t}\r\n}\r\n","export default class Receive {\r\n\tconstructor(channel) {\r\n\t\tthis.rom = new ArrayBuffer();\r\n\t\tthis.channel = channel;\r\n\r\n\t\tthis._received = 0;\r\n\t}\r\n\r\n\trun(bytes) {\r\n\t\tthis.rom = this._appendBuffer(this.rom, bytes);\r\n\r\n\t\tthis._received += bytes.byteLength;\r\n\t\tthis.channel.send(\"next\");\r\n\t}\r\n\r\n\t_appendBuffer(buffer1, buffer2) {\r\n\t\tvar tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\r\n\t\ttmp.set(new Uint8Array(buffer1), 0);\r\n\t\ttmp.set(new Uint8Array(buffer2), buffer1.byteLength);\r\n\t\treturn tmp.buffer;\r\n\t}\r\n\r\n\tget transferred() {\r\n\t\treturn this._received;\r\n\t}\r\n}\r\n","import EventEmitter from \"eventemitter3\";\nimport { Send } from \"./transfer\";\nimport config from \"../config\";\nimport bus from \"../events\";\nimport strings from \"../locales\";\n\nconst STATE = {\n\tSENDING_ROM: 0,\n\tPLAYING: 1\n};\n\nexport default class MasterSyncer extends EventEmitter {\n\tconstructor(channel) {\n\t\tsuper();\n\n\t\tthis.channel = channel;\n\t\tthis._reset();\n\t\tthis.channel.on(\"data\", (bytes) => this._onData(bytes));\n\t}\n\n\tsync() {\n\t\tconst { masterBufferLimit } = config.buffering;\n\n\t\tif (\n\t\t\tthis._state !== STATE.PLAYING ||\n\t\t\tthis._blindFrames > masterBufferLimit\n\t\t) {\n\t\t\tbus.emit(\"isLoading\", true);\n\t\t\treturn;\n\t\t}\n\n\t\tbus.emit(\"isLoading\", false);\n\t\tthis._runFrame();\n\t}\n\n\tinitializeRom(rom) {\n\t\tthis._transfer = new Send(rom, this.channel);\n\t\tthis._transfer.run();\n\t\tthis.emit(\"rom\", rom);\n\t}\n\n\tupdateRom(rom) {\n\t\tthis.channel.send(\"new-rom\");\n\t\tthis._reset();\n\t\tthis.initializeRom(rom);\n\t}\n\n\tinitializeEmulator(emulator) {\n\t\tthis._emulator = emulator;\n\n\t\temulator.localController.isMaster = true;\n\t\temulator.localController.needsSwap = false;\n\t\temulator.localController.player = 1;\n\t\temulator.remoteController.player = 2;\n\t\tbus.emit(\"player\", 1);\n\t}\n\n\tonStartPressed() {}\n\n\tonSwap() {\n\t\tconst player = this._emulator.localController.swapWith(\n\t\t\tthis._emulator.remoteController\n\t\t);\n\t\tbus.emit(\"player\", player);\n\t}\n\n\t_start() {\n\t\tthis._transfer = null;\n\t\tthis._state = STATE.PLAYING;\n\t\tthis.emit(\"start\");\n\t\tbus.emit(\"message\", null);\n\t\tbus.emit(\"isLoading\", false);\n\t}\n\n\t_runFrame() {\n\t\tconst { masterBufferLimit } = config.buffering;\n\n\t\t// buffer overrun\n\t\tif (this._buffer.length > masterBufferLimit) {\n\t\t\tconst excess = this._buffer.length - masterBufferLimit;\n\t\t\tfor (let i = 0; i < excess; i++) this._buffer.shift();\n\t\t}\n\n\t\tconst bytes = this._buffer.shift();\n\t\tif (bytes) {\n\t\t\t// normal scenario\n\t\t\tconst remoteButtons = new Uint8Array(bytes)[0];\n\t\t\tconst remoteControllerNeedsSwap = new Uint8Array(bytes)[1];\n\t\t\tthis._emulator.remoteController.syncAll(remoteButtons);\n\t\t\tif (\n\t\t\t\t(this._emulator.localController.player === 1 &&\n\t\t\t\t\tthis._emulator.localController.needsSwap) ||\n\t\t\t\t(this._emulator.remoteController.player === 1 &&\n\t\t\t\t\tremoteControllerNeedsSwap)\n\t\t\t)\n\t\t\t\tthis.onSwap();\n\t\t} else {\n\t\t\t// buffer underrun, do nothing (assume previous input)\n\t\t}\n\n\t\tconst buffer = new Uint8Array(3);\n\t\tbuffer[0] = this._emulator.localController.toByte();\n\t\tbuffer[1] = this._emulator.remoteController.toByte();\n\t\tbuffer[2] = this._emulator.localController.player;\n\t\tthis.channel.send(buffer);\n\t\tthis._blindFrames++;\n\n\t\tthis._emulator.frame();\n\t}\n\n\t_onData(bytes) {\n\t\tswitch (this._state) {\n\t\t\tcase STATE.SENDING_ROM:\n\t\t\t\tif (bytes === \"next\") {\n\t\t\t\t\tconst hasEnded = this._transfer.run();\n\t\t\t\t\tif (hasEnded) bus.emit(\"message\", strings.waiting);\n\t\t\t\t} else if (bytes === \"start\") this._start();\n\n\t\t\t\tbreak;\n\t\t\tcase STATE.PLAYING:\n\t\t\t\tthis._buffer.push(bytes);\n\t\t\t\tthis._blindFrames = 0;\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t_reset() {\n\t\tthis._state = STATE.SENDING_ROM;\n\t\tthis._transfer = null;\n\t\tthis._buffer = [];\n\t\tthis._blindFrames = 0;\n\n\t\tbus.emit(\"isLoading\", true);\n\t}\n}\n","import EventEmitter from \"eventemitter3\";\nimport { Receive } from \"./transfer\";\nimport config from \"../config\";\nimport bus from \"../events\";\nimport strings from \"../locales\";\n\nconst STATE = {\n\tRECEIVING_ROM: 0,\n\tWAITING_START: 1,\n\tPLAYING: 2\n};\n\nexport default class SlaveSyncer extends EventEmitter {\n\tconstructor(channel) {\n\t\tsuper();\n\n\t\tthis.channel = channel;\n\t\tthis._reset();\n\t\tthis.channel.on(\"data\", (bytes) => this._onData(bytes));\n\t\tthis._hasPressedStart = false;\n\t}\n\n\tsync() {\n\t\tconst { minBufferSize, maxBufferSize } = config.buffering;\n\n\t\t// buffer underrun\n\t\tif (this._buffer.length < minBufferSize) {\n\t\t\tthis._isBuffering = true;\n\t\t\tbus.emit(\"isLoading\", true);\n\t\t\treturn;\n\t\t}\n\n\t\t// buffer overrun\n\t\tif (this._buffer.length > maxBufferSize) {\n\t\t\tconst excess = this._buffer.length - maxBufferSize;\n\t\t\tfor (let i = 0; i < excess; i++) this._runFrame();\n\t\t}\n\n\t\t// normal scenario\n\t\tif (this._isBuffering && this._buffer.length < maxBufferSize) return;\n\t\telse this._runFrame();\n\t}\n\n\tinitializeRom(rom) {}\n\n\tupdateRom(rom) {}\n\n\tinitializeEmulator(emulator) {\n\t\tthis._emulator = emulator;\n\n\t\tbus.emit(\"isLoading\", false);\n\t\temulator.localController.isMaster = false;\n\t\temulator.localController.needsSwap = false;\n\t\temulator.localController.player = 2;\n\t\temulator.remoteController.player = 1;\n\t\tbus.emit(\"player\", 2);\n\t}\n\n\tonStartPressed() {\n\t\tif (this._state === STATE.WAITING_START) {\n\t\t\tthis._hasPressedStart = true;\n\t\t\tthis._start();\n\t\t}\n\t}\n\n\tonSwap() {\n\t\tconst player = this._emulator.localController.swapWith(\n\t\t\tthis._emulator.remoteController\n\t\t);\n\t\tbus.emit(\"player\", player);\n\t}\n\n\t_start() {\n\t\tthis.emit(\"start\");\n\t\tthis.channel.send(\"start\");\n\t\tbus.emit(\"message\", null);\n\t\tthis._state = STATE.PLAYING;\n\t}\n\n\t_runFrame() {\n\t\tthis._isBuffering = false;\n\t\tbus.emit(\"isLoading\", false);\n\n\t\tconst bytes = this._buffer.shift();\n\t\tconst remoteButtons = new Uint8Array(bytes)[0];\n\t\tconst localButtons = new Uint8Array(bytes)[1];\n\t\tconst remotePlayer = new Uint8Array(bytes)[2];\n\t\tthis._emulator.remoteController.syncAll(remoteButtons);\n\t\tthis._emulator.localController.syncAll(localButtons);\n\t\tif (remotePlayer !== this._emulator.remoteController.player) this.onSwap();\n\n\t\tthis._emulator.frame();\n\t}\n\n\t_onData(bytes) {\n\t\tif (bytes === \"new-rom\") {\n\t\t\tthis._reset();\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (this._state) {\n\t\t\tcase STATE.RECEIVING_ROM:\n\t\t\t\tif (bytes === \"end\") {\n\t\t\t\t\tthis.emit(\"rom\", this._transfer.rom);\n\t\t\t\t\tthis._transfer = null;\n\n\t\t\t\t\tif (this._hasPressedStart) this._start();\n\t\t\t\t\telse {\n\t\t\t\t\t\tbus.emit(\"message\", strings.pressStart);\n\t\t\t\t\t\tthis._state = STATE.WAITING_START;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._transfer.run(bytes);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase STATE.PLAYING:\n\t\t\t\tif (!this._emulator) return;\n\n\t\t\t\tthis._buffer.push(bytes);\n\n\t\t\t\tconst buffer = new Uint8Array(2);\n\t\t\t\tbuffer[0] = this._emulator.localController.toByte();\n\t\t\t\tbuffer[1] = +this._emulator.localController.needsSwap;\n\t\t\t\tthis.channel.send(buffer);\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t_reset() {\n\t\tthis._state = STATE.RECEIVING_ROM;\n\t\tthis._transfer = new Receive(this.channel);\n\t\tthis._isBuffering = false;\n\t\tthis._buffer = [];\n\n\t\tbus.emit(\"isLoading\", true);\n\t}\n}\n","import React, { Component } from \"react\";\r\nimport Header from \"../widgets/Header\";\r\nimport { MasterSyncer } from \"../networking\";\r\nimport quickp2p from \"quickp2p\";\r\nimport strings from \"../locales\";\r\n\r\nconst COPIED_MESSAGE_TIME = 1000;\r\n\r\nexport default class InviteHeader extends Component {\r\n\tstate = { token: null, copied: false, isDown: false };\r\n\r\n\trender() {\r\n\t\tconst { needsRom } = this.props;\r\n\t\tconst { token, copied, isDown } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Header>\r\n\t\t\t\t{copied ? (\r\n\t\t\t\t\t<span>{strings.copied}</span>\r\n\t\t\t\t) : needsRom ? (\r\n\t\t\t\t\t<span>{strings.dragARomHere}</span>\r\n\t\t\t\t) : token ? (\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{strings.shareThis}{\" \"}\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref={`?token=${token}#/join`}\r\n\t\t\t\t\t\t\tonClick={this._copyLink}\r\n\t\t\t\t\t\t\ttabIndex=\"-1\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{strings.link}\r\n\t\t\t\t\t\t</a>{\" \"}\r\n\t\t\t\t\t\t{strings.toPlayWithSomeone}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t) : isDown ? (\r\n\t\t\t\t\t<span>{strings.errors.serverIsDown}</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span>{strings.loading}</span>\r\n\t\t\t\t)}\r\n\t\t\t</Header>\r\n\t\t);\r\n\t}\r\n\r\n\tasync componentDidUpdate(nextProps) {\r\n\t\tconst { needsRom, onSyncer, onError } = this.props;\r\n\t\tif (needsRom || this.channel) return;\r\n\r\n\t\tconst onConnectionError = () => {\r\n\t\t\tthis.channel = null;\r\n\t\t\tthis.setState({ token: null, copied: false });\r\n\t\t\tonError();\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tthis.channel = await quickp2p.createChannel();\r\n\t\t\tthis.channel\r\n\t\t\t\t.on(\"connected\", () => {\r\n\t\t\t\t\tonSyncer(new MasterSyncer(this.channel));\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"timeout\", onConnectionError)\r\n\t\t\t\t.on(\"disconnected\", onConnectionError);\r\n\t\t\tthis.setState({ token: this.channel.token, isDown: false });\r\n\t\t} catch (e) {\r\n\t\t\tthis.setState({ isDown: true });\r\n\t\t}\r\n\t}\r\n\r\n\t_copyLink = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tnavigator.clipboard.writeText(e.target.href);\r\n\t\tthis.setState({ copied: true });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ copied: false });\r\n\t\t}, COPIED_MESSAGE_TIME);\r\n\t};\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../widgets/Header\";\r\nimport { SlaveSyncer } from \"../networking\";\r\nimport quickp2p from \"quickp2p\";\r\nimport strings from \"../locales\";\r\n\r\nexport default class JoinHeader extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Header>\r\n\t\t\t\t<span>{strings.connecting}</span>\r\n\t\t\t</Header>\r\n\t\t);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { onSyncer, onError } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tconst channel = await quickp2p.joinChannel(this.props.token);\r\n\t\t\tchannel\r\n\t\t\t\t.on(\"connected\", () => {\r\n\t\t\t\t\tonSyncer(new SlaveSyncer(channel));\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"timeout\", onError)\r\n\t\t\t\t.on(\"disconnected\", onError);\r\n\t\t} catch (e) {\r\n\t\t\tonError();\r\n\t\t}\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class KeyBinding extends Component {\r\n\trender() {\r\n\t\tconst { displayName, isAssigning, verticalMirror = false } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"nes-btn is-primary\"\r\n\t\t\t\tonClick={this._onAssign}\r\n\t\t\t>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tverticalMirror\r\n\t\t\t\t\t\t\t? { transform: \"scale(1, -1)\", display: \"inline-block\" }\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{isAssigning ? \"...\" : displayName}\r\n\t\t\t\t</span>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\t_onAssign = () => {\r\n\t\tif (this.props.isAssigning) this.props.onAssignCancel();\r\n\t\telse this.props.onAssignStart();\r\n\t};\r\n}\r\n","import React, { Component } from \"react\";\nimport KeyBinding from \"../widgets/KeyBinding\";\nimport bus from \"../events\";\nimport config from \"../config\";\nimport strings from \"../locales\";\nimport styles from \"./Settings.module.css\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\n\nconst DEFAULT_SCREEN_WIDTH = 1920;\n\nconst BUTTONS = [\n\t{ name: \"BUTTON_LEFT\", displayName: \"<\" },\n\t{ name: \"BUTTON_RIGHT\", displayName: \">\" },\n\t{ name: \"BUTTON_UP\", displayName: \"v\", verticalMirror: true },\n\t{ name: \"BUTTON_DOWN\", displayName: \"v\" },\n\t{ name: \"BUTTON_B\", displayName: \"B\" },\n\t{ name: \"BUTTON_A\", displayName: \"A\" },\n\t{ name: \"BUTTON_SELECT\", displayName: \"SELECT\" },\n\t{ name: \"BUTTON_START\", displayName: \"START\" },\n\t{ name: \"SWAP\", displayName: \"<SWAP>\" }\n];\n\nexport default class Settings extends Component {\n\tstate = { mappingButton: null };\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"keydown\", this._onKeyDown);\n\t\twindow.addEventListener(\"resize\", this._onResize);\n\t\tthis._onResize();\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"keydown\", this._onKeyDown);\n\t\twindow.removeEventListener(\"resize\", this._onResize);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.settings} id=\"settings\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName={classNames(styles.closeButton, \"nes-btn\", \"is-error\")}\n\t\t\t\t\tonClick={this._onClose}\n\t\t\t\t>\n\t\t\t\t\tx\n\t\t\t\t</button>\n\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\tstyles.setDefaultsButton,\n\t\t\t\t\t\t\"nes-btn\",\n\t\t\t\t\t\t\"is-warning\"\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={this._onSetDefaults}\n\t\t\t\t>\n\t\t\t\t\t{strings.setDefaults}\n\t\t\t\t</button>\n\n\t\t\t\t<section\n\t\t\t\t\tclassName={classNames(\"nes-container\", \"is-dark\", \"with-title\")}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"title\">{strings.sound}</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{config.soundOptions.map((it) => (\n\t\t\t\t\t\t\t<label key={it.name}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tclassName=\"nes-radio is-dark\"\n\t\t\t\t\t\t\t\t\tname=\"sound\"\n\t\t\t\t\t\t\t\t\tchecked={config.options.sound === it.name}\n\t\t\t\t\t\t\t\t\tonChange={(e) => this._update(\"sound\", it.name)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span>{it.name}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\n\t\t\t\t<section\n\t\t\t\t\tclassName={classNames(\"nes-container\", \"is-dark\", \"with-title\")}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"title\">{strings.buffering}</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{config.bufferingOptions.map((it) => (\n\t\t\t\t\t\t\t<label key={it.name}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tclassName=\"nes-radio is-dark\"\n\t\t\t\t\t\t\t\t\tname=\"buffering\"\n\t\t\t\t\t\t\t\t\tchecked={config.options.buffering === it.name}\n\t\t\t\t\t\t\t\t\tonChange={() => this._update(\"buffering\", it.name)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span>{it.name}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\n\t\t\t\t<section\n\t\t\t\t\tclassName={classNames(\"nes-container\", \"is-dark\", \"with-title\")}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"title\">{strings.crtEffect}</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{[true, false].map((it) => (\n\t\t\t\t\t\t\t<label key={it}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tclassName=\"nes-radio is-dark\"\n\t\t\t\t\t\t\t\t\tname=\"crt\"\n\t\t\t\t\t\t\t\t\tchecked={config.options.crt === it}\n\t\t\t\t\t\t\t\t\tonChange={() => this._update(\"crt\", it)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span>{strings[`enabled_${it}`]}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\n\t\t\t\t<section\n\t\t\t\t\tclassName={classNames(\"nes-container\", \"is-dark\", \"with-title\")}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"title\">{strings.input}</div>\n\n\t\t\t\t\t{BUTTONS.map((button) => (\n\t\t\t\t\t\t<KeyBinding\n\t\t\t\t\t\t\tkey={button.name}\n\t\t\t\t\t\t\tname={button.name}\n\t\t\t\t\t\t\tverticalMirror={button.verticalMirror}\n\t\t\t\t\t\t\tdisplayName={button.displayName}\n\t\t\t\t\t\t\tisAssigning={this.state.mappingButton === button.name}\n\t\t\t\t\t\t\tonAssignStart={() =>\n\t\t\t\t\t\t\t\tthis.setState({ mappingButton: button.name })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonAssignCancel={() => this.setState({ mappingButton: null })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_update(property, value) {\n\t\t_.set(config.options, property, value);\n\t\tconfig.save();\n\t\tthis._notify();\n\t}\n\n\t_notify() {\n\t\tbus.emit(\"volume\", config.sound.gain);\n\t\tbus.emit(\"keymap\");\n\n\t\tconst container = document.querySelector(\"#container\");\n\t\tif (config.options.crt) container.classList.add(\"crt\");\n\t\telse container.classList.remove(\"crt\");\n\n\t\tthis.forceUpdate();\n\t}\n\n\t_onClose = () => {\n\t\tbus.emit(\"closeSettings\");\n\t};\n\n\t_onSetDefaults = () => {\n\t\tconfig.reset();\n\t\tthis._notify();\n\t};\n\n\t_onAssign = () => {\n\t\tif (this.props.isAssigning) return;\n\n\t\tthis.props.onAssignStart();\n\t\twindow.addEventListener(\"keydown\", this._onKeyDown);\n\t};\n\n\t_onKeyDown = (e) => {\n\t\tif (!this.state.mappingButton) return;\n\n\t\te.preventDefault();\n\n\t\tconst oldKey = _.findKey(\n\t\t\tconfig.options.input,\n\t\t\t(it) => it === this.state.mappingButton\n\t\t);\n\t\tconst newKey = e.key;\n\n\t\tdelete config.options.input[oldKey];\n\t\tconfig.options.input[newKey] = this.state.mappingButton;\n\t\tconfig.save();\n\t\tthis._notify();\n\n\t\tthis.setState({ mappingButton: null });\n\t};\n\n\t_onResize = () => {\n\t\tconst width = window.innerWidth;\n\t\tconst element = document.querySelector(\"#settings\");\n\t\tconst scale = width / DEFAULT_SCREEN_WIDTH;\n\t\telement.style.transform = `scale(${scale})`;\n\t};\n}\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Settings from \"./Settings\";\r\nimport bus from \"../events\";\r\nimport styles from \"./Overlay.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class Overlay extends Component {\r\n\tstate = { isSettingsMenuOpen: false, isLoading: false, message: null };\r\n\r\n\trender() {\r\n\t\tconst { isVisible } = this;\r\n\t\tconst { isSettingsMenuOpen, isLoading, message } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classNames(styles.overlay, isVisible && styles.show)}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={classNames(styles.loader, message == null && styles.dark)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{isSettingsMenuOpen ? (\r\n\t\t\t\t\t\t<Settings />\r\n\t\t\t\t\t) : message != null ? (\r\n\t\t\t\t\t\t<div className={styles.message}>{message}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tisLoading && (\r\n\t\t\t\t\t\t\t<Loader type=\"Watch\" color=\"#CCCCCC\" height=\"50\" width=\"50\" />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tbus\r\n\t\t\t.on(\"isLoading\", (isLoading) => {\r\n\t\t\t\tthis.setState({ isLoading });\r\n\t\t\t})\r\n\t\t\t.on(\"message\", (message) => {\r\n\t\t\t\tthis.setState({ isLoading: false, message });\r\n\t\t\t})\r\n\t\t\t.on(\"openSettings\", () => {\r\n\t\t\t\tthis.setState({ isSettingsMenuOpen: true });\r\n\t\t\t})\r\n\t\t\t.on(\"closeSettings\", () => {\r\n\t\t\t\tthis.setState({ isSettingsMenuOpen: false });\r\n\t\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tbus.removeListener(\"isLoading\");\r\n\t\tbus.removeListener(\"message\");\r\n\t\tbus.removeListener(\"openSettings\");\r\n\t\tbus.removeListener(\"closeSettings\");\r\n\t}\r\n\r\n\tget isVisible() {\r\n\t\treturn (\r\n\t\t\tthis.state.isSettingsMenuOpen ||\r\n\t\t\tthis.state.isLoading ||\r\n\t\t\tthis.state.message != null\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst SCREEN_WIDTH = 256;\r\nconst SCREEN_HEIGHT = 240;\r\n\r\nexport default class TVNoise extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<canvas\r\n\t\t\t\tstyle={{ width: \"100%\", height: \"100%\", borderRadius: 8 }}\r\n\t\t\t\twidth={SCREEN_WIDTH}\r\n\t\t\t\theight={SCREEN_HEIGHT}\r\n\t\t\t\tref={(canvas) => {\r\n\t\t\t\t\tif (canvas) this._initCanvas(canvas);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tcancelAnimationFrame(this._frameId);\r\n\t}\r\n\r\n\t_initCanvas(canvas) {\r\n\t\tconst self = this;\r\n\t\tconst context = canvas.getContext(\"2d\");\r\n\r\n\t\tfunction noise(ctx) {\r\n\t\t\tlet w = ctx.canvas.width,\r\n\t\t\t\th = ctx.canvas.height,\r\n\t\t\t\tidata = ctx.createImageData(w, h),\r\n\t\t\t\tbuffer32 = new Uint32Array(idata.data.buffer),\r\n\t\t\t\tlen = buffer32.length,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor (; i < len; ) buffer32[i++] = ((255 * Math.random()) | 0) << 24;\r\n\r\n\t\t\tctx.putImageData(idata, 0, 0);\r\n\t\t}\r\n\r\n\t\tlet toggle = true;\r\n\t\t(function loop() {\r\n\t\t\ttoggle = !toggle;\r\n\t\t\tif (toggle) {\r\n\t\t\t\tself._frameId = requestAnimationFrame(loop);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tnoise(context);\r\n\t\t\tself._frameId = requestAnimationFrame(loop);\r\n\t\t})();\r\n\t}\r\n}\r\n","import cleanQueryString from \"./cleanQueryString\";\r\nimport ellipsize from \"./ellipsize\";\r\n\r\nexport default { cleanQueryString, ellipsize };\r\n","export default () => {\r\n\tlet url;\r\n\turl = window.location.href;\r\n\turl = url.replace(url.substring(url.indexOf(\"?\")), \"\");\r\n\turl = url.substring(url.indexOf(\"//\") + 2);\r\n\turl = url.substring(url.indexOf(\"/\"));\r\n\twindow.history.replaceState({}, \"\", url);\r\n};\r\n","export default (string, limit) =>\r\n\t`${string.substring(0, limit)}${string.length > limit ? \"…\" : \"\"}`;\r\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport strings from \"../locales\";\nimport helpers from \"../gui/helpers\";\nimport bus from \"../events\";\nimport styles from \"./Controls.module.css\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\n\nconst TRICK_TIME = 100;\nconst FRIENDLY_NAMES = {\n\tArrowLeft: \"<\",\n\tArrowRight: \">\",\n\tArrowUp: \"~v\",\n\tArrowDown: \"v\",\n\t\" \": \"[Space]\"\n};\n\nexport default class Controls extends Component {\n\tstate = { player: 1 };\n\n\trender() {\n\t\tconst upKey = this._keyFor(\"BUTTON_UP\");\n\t\tconst isUpArrow = upKey === \"~v\";\n\n\t\treturn (\n\t\t\t<div className={styles.controls}>\n\t\t\t\t<b className={classNames(styles.title, styles.centered)}>\n\t\t\t\t\t{strings.controls}\n\t\t\t\t</b>\n\t\t\t\t<b className={classNames(styles.title, styles.centered)}>\n\t\t\t\t\t{this.state.player}P\n\t\t\t\t</b>\n\t\t\t\t{this.state.player === 1 ? (\n\t\t\t\t\t<b className={classNames(styles.dpad, styles.centered)}>\n\t\t\t\t\t\t({strings.swap}:{\" \"}\n\t\t\t\t\t\t{this.usesGamepad ? strings.swapButton : this._keyFor(\"SWAP\")})\n\t\t\t\t\t</b>\n\t\t\t\t) : (\n\t\t\t\t\t<br />\n\t\t\t\t)}\n\t\t\t\t<br />\n\t\t\t\t{this.usesGamepad ? (\n\t\t\t\t\t<div className={styles.centered}>{strings.yourController}</div>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={styles.controller}>\n\t\t\t\t\t\t\t<span className={styles.dpad}>\n\t\t\t\t\t\t\t\t<span>{this._keyFor(\"BUTTON_LEFT\")}</span>{\" \"}\n\t\t\t\t\t\t\t\t<span>{this._keyFor(\"BUTTON_RIGHT\")}</span>{\" \"}\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\t\tisUpArrow\n\t\t\t\t\t\t\t\t\t\t\t? { transform: \"scale(1, -1)\", display: \"inline-block\" }\n\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isUpArrow ? \"v\" : upKey}\n\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t<span>{this._keyFor(\"BUTTON_DOWN\")}</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className={styles.buttons}>\n\t\t\t\t\t\t\t\t{this._keyFor(\"BUTTON_B\")} {this._keyFor(\"BUTTON_A\")}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.centered}>\n\t\t\t\t\t\t\t{this._keyFor(\"BUTTON_SELECT\")} {this._keyFor(\"BUTTON_START\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tblink() {\n\t\tconst element = document.querySelector(\"#root\");\n\t\telement.classList.remove(\"blink\");\n\t\tsetTimeout(() => element.classList.add(\"blink\"), TRICK_TIME);\n\t}\n\n\tcomponentDidMount() {\n\t\tbus\n\t\t\t.on(\"keymap\", () => {\n\t\t\t\tbus.emit(\"keymap-updated\");\n\t\t\t\tthis.forceUpdate();\n\t\t\t\tthis.blink();\n\t\t\t})\n\t\t\t.on(\"player\", (player) => {\n\t\t\t\tthis.setState({ player });\n\t\t\t\tthis.blink();\n\t\t\t})\n\t\t\t.on(\"gamepad\", this._onGamepadConnected)\n\t\t\t.on(\"reset\", () => {\n\t\t\t\tthis.setState({ player: 1 });\n\t\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tbus.removeListener(\"keymap\");\n\t}\n\n\t_onGamepadConnected = (e) => {\n\t\tthis.usesGamepad = true;\n\t\tthis.forceUpdate();\n\t\tthis.blink();\n\t};\n\n\t_keyFor(button) {\n\t\tconst key = _.findKey(config.options.input, (it) => it === button);\n\t\tif (!key) return \"[?]\";\n\n\t\treturn this._format(key);\n\t}\n\n\t_format(key) {\n\t\treturn (\n\t\t\tFRIENDLY_NAMES[key] ||\n\t\t\t(key.length === 1 ? key.toUpperCase() : `[${helpers.ellipsize(key, 6)}]`)\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\r\nimport bus from \"../events\";\r\nimport styles from \"./SettingsButton.module.css\";\r\nimport strings from \"../locales\";\r\n\r\nexport default class SettingsButton extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={styles.button}>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\ttabIndex=\"-1\"\r\n\t\t\t\t\tclassName=\"nes-btn\"\r\n\t\t\t\t\tonClick={this._onClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t{strings.settings}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t_onClick = () => {\r\n\t\tbus.emit(\"openSettings\");\r\n\t};\r\n}\r\n","import React, { Component } from \"react\";\nimport Emulator from \"../emulator\";\nimport InviteHeader from \"./InviteHeader\";\nimport JoinHeader from \"./JoinHeader\";\nimport Overlay from \"./Overlay\";\nimport Header from \"../widgets/Header\";\nimport TVNoise from \"../widgets/TVNoise\";\nimport Controls from \"../widgets/Controls\";\nimport SettingsButton from \"../widgets/SettingsButton\";\nimport helpers from \"./helpers\";\nimport config from \"../config\";\nimport bus from \"../events\";\nimport styles from \"./PlayScreen.module.css\";\nimport strings from \"../locales\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\n\n// DEBUG\nwindow.bus = require(\"../events\").default;\nwindow.config = require(\"../config\").default;\n\nexport default class PlayScreen extends Component {\n\tstate = { rom: null, syncer: null };\n\n\trender() {\n\t\tconst { token } = this.props;\n\t\tconst { rom, syncer } = this.state;\n\n\t\treturn (\n\t\t\t<div className={styles.app}>\n\t\t\t\t{syncer ? (\n\t\t\t\t\t<Header>{strings.connected}</Header>\n\t\t\t\t) : token ? (\n\t\t\t\t\t<JoinHeader\n\t\t\t\t\t\tonSyncer={this._onSyncer}\n\t\t\t\t\t\tonError={this._onError}\n\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<InviteHeader\n\t\t\t\t\t\tonSyncer={this._onSyncer}\n\t\t\t\t\t\tonError={this._onError}\n\t\t\t\t\t\tneedsRom={!rom}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{\n\t\t\t\t\t<div className={styles.main}>\n\t\t\t\t\t\t<section\n\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\tstyles.gameContainer,\n\t\t\t\t\t\t\t\t\"nes-container\",\n\t\t\t\t\t\t\t\t\"is-dark\",\n\t\t\t\t\t\t\t\t\"with-title\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={styles.overlay}>\n\t\t\t\t\t\t\t\t<Overlay />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{rom ? (\n\t\t\t\t\t\t\t\t<Emulator\n\t\t\t\t\t\t\t\t\trom={rom}\n\t\t\t\t\t\t\t\t\tsyncer={syncer}\n\t\t\t\t\t\t\t\t\tonStartPressed={this._onStartPressed}\n\t\t\t\t\t\t\t\t\tonError={this._onError}\n\t\t\t\t\t\t\t\t\tref={(ref) => (this.emulator = ref)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<TVNoise />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<div className={styles.controls}>\n\t\t\t\t\t<Controls />\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.menu}>\n\t\t\t\t\t<SettingsButton />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"dragover\", this._ignore);\n\t\twindow.addEventListener(\"dragenter\", this._ignore);\n\t\twindow.addEventListener(\"drop\", this._onFileDrop);\n\t\tif (config.options.crt)\n\t\t\tdocument.querySelector(\"#container\").classList.add(\"crt\");\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"dragover\", this._ignore);\n\t\twindow.removeEventListener(\"dragenter\", this._ignore);\n\t\twindow.removeEventListener(\"drop\", this._onFileDrop);\n\t}\n\n\t_onSyncer = (syncer) => {\n\t\tthis.setState({ syncer });\n\n\t\tsyncer.on(\"rom\", (rom) => {\n\t\t\tthis._loadRom(rom, () => syncer.initializeEmulator(this.emulator), false);\n\t\t});\n\t\tsyncer.on(\"start\", () => this.emulator && this.emulator.start());\n\n\t\tsyncer.initializeRom(this.state.rom);\n\t};\n\n\t_loadRom(rom, callback = _.noop, start = true) {\n\t\tbus.emit(\"message\", null);\n\n\t\tthis.setState({ rom }, () => {\n\t\t\tcallback();\n\t\t\tif (start) this.emulator.start();\n\t\t});\n\t}\n\n\t_onFileDrop = (e) => {\n\t\te.preventDefault();\n\n\t\tconst file = _.first(e.dataTransfer.files);\n\t\tconst reader = new FileReader();\n\t\tif (!file) return;\n\n\t\treader.onload = (event) => {\n\t\t\tconst rom = event.target.result;\n\n\t\t\tif (this.state.syncer) this.state.syncer.updateRom(rom);\n\t\t\telse this._loadRom(event.target.result);\n\t\t};\n\n\t\treader.readAsArrayBuffer(file);\n\t};\n\n\t_ignore = (e) => {\n\t\te.stopPropagation();\n\t\te.preventDefault();\n\t};\n\n\t_onStartPressed = () => {\n\t\tif (!this.state.syncer) return;\n\t\tthis.state.syncer.onStartPressed();\n\t};\n\n\t_onError = (error, reset = true) => {\n\t\tthis.setState({ rom: null });\n\t\tbus.emit(\"message\", error || strings.errors.connectionFailed);\n\t\tif (!reset) return;\n\n\t\tbus.emit(\"reset\");\n\t\tthis.setState({ syncer: null });\n\t\thelpers.cleanQueryString();\n\t\twindow.location.href = \"#/\";\n\t};\n}\n","import React, { PureComponent } from \"react\";\r\nimport PlayScreen from \"./gui/PlayScreen\";\r\nimport querystring from \"query-string\";\r\nimport quickp2p, { SimpleStore } from \"quickp2p\";\r\n\r\nquickp2p.setStore(\r\n\tnew SimpleStore(\"https://simple-key-value-store.herokuapp.com\")\r\n);\r\n\r\nexport default class App extends PureComponent {\r\n\trender() {\r\n\t\tconst route = window.location.hash;\r\n\r\n\t\tif (route.startsWith(\"#/join\"))\r\n\t\t\treturn <PlayScreen token={this.inviteToken} />;\r\n\t\telse return <PlayScreen />;\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount() {\r\n\t\tthis._listener = window.addEventListener(\"hashchange\", (e) => {\r\n\t\t\tthis.forceUpdate();\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener(\"hashchange\", this._listener);\r\n\t}\r\n\r\n\tget inviteToken() {\r\n\t\treturn querystring.parse(window.location.search).token;\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"nes.css/css/nes.css\";\r\nimport \"./index.css\";\r\nimport \"./crt.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"PlayScreen_app__19HdR\",\"main\":\"PlayScreen_main__2DZfL\",\"gameContainer\":\"PlayScreen_gameContainer__TNJBD\",\"overlay\":\"PlayScreen_overlay__1M2gy\",\"controls\":\"PlayScreen_controls__1Ryre\",\"menu\":\"PlayScreen_menu__1iXjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__2xHdf\",\"show\":\"Overlay_show__CYhNa\",\"loader\":\"Overlay_loader__3Disu\",\"dark\":\"Overlay_dark__2IwIj\",\"message\":\"Overlay_message__3zFor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3IKOb\",\"closeButton\":\"Settings_closeButton__1E0A8\",\"setDefaultsButton\":\"Settings_setDefaultsButton__n5JDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balloon\":\"BalloonMessage_balloon__3lI4z\",\"character\":\"BalloonMessage_character__1zLP6\"};","import EventEmitter from \"eventemitter3\";\r\n\r\nexport default new EventEmitter();\r\n","import bus from \"./bus\";\r\n\r\nexport default bus;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"Screen_screen__2lJdo\"};","module.exports = __webpack_public_path__ + \"static/media/halu.2e5e0dc3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SettingsButton_button__3xnE0\"};","const KEY = \"options\";\r\nconst HALF_VOLUME = \"50%\";\r\nconst LOW = \"Low\";\r\n\r\nclass Config {\r\n\tconstructor() {\r\n\t\tthis.options = this.defaultOptions;\r\n\t\tthis.load();\r\n\t}\r\n\r\n\tsave() {\r\n\t\tlocalStorage.setItem(KEY, JSON.stringify(this.options));\r\n\t}\r\n\r\n\tload() {\r\n\t\ttry {\r\n\t\t\tthis.options =\r\n\t\t\t\tJSON.parse(localStorage.getItem(KEY)) || this.defaultOptions;\r\n\t\t} catch (e) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.options = this.defaultOptions;\r\n\t\tthis.save();\r\n\t}\r\n\r\n\tget sound() {\r\n\t\treturn this.soundOptions.find((it) => it.name === this.options.sound);\r\n\t}\r\n\r\n\tget buffering() {\r\n\t\treturn this.bufferingOptions.find(\r\n\t\t\t(it) => it.name === this.options.buffering\r\n\t\t);\r\n\t}\r\n\r\n\tget defaultOptions() {\r\n\t\treturn {\r\n\t\t\tsound: HALF_VOLUME,\r\n\t\t\tbuffering: LOW,\r\n\t\t\tcrt: true,\r\n\t\t\tinput: {\r\n\t\t\t\t\" \": \"BUTTON_A\",\r\n\t\t\t\td: \"BUTTON_B\",\r\n\t\t\t\tDelete: \"BUTTON_SELECT\",\r\n\t\t\t\tEnter: \"BUTTON_START\",\r\n\t\t\t\tArrowUp: \"BUTTON_UP\",\r\n\t\t\t\tArrowDown: \"BUTTON_DOWN\",\r\n\t\t\t\tArrowLeft: \"BUTTON_LEFT\",\r\n\t\t\t\tArrowRight: \"BUTTON_RIGHT\",\r\n\t\t\t\tr: \"SWAP\"\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tget soundOptions() {\r\n\t\treturn [\r\n\t\t\t{ name: \"100%\", gain: 1 },\r\n\t\t\t{ name: \"90%\", gain: 0.9 },\r\n\t\t\t{ name: \"75%\", gain: 0.75 },\r\n\t\t\t{ name: HALF_VOLUME, gain: 0.5 },\r\n\t\t\t{ name: \"25%\", gain: 0.25 },\r\n\t\t\t{ name: \"10%\", gain: 0.1 },\r\n\t\t\t{ name: \"0%\", gain: 0 }\r\n\t\t];\r\n\t}\r\n\r\n\tget bufferingOptions() {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tname: \"Disabled\",\r\n\t\t\t\tmasterBufferLimit: 3,\r\n\t\t\t\tminBufferSize: 1,\r\n\t\t\t\tmaxBufferSize: 1\r\n\t\t\t},\r\n\t\t\t{ name: LOW, masterBufferLimit: 3, minBufferSize: 1, maxBufferSize: 2 },\r\n\t\t\t{\r\n\t\t\t\tname: \"Medium\",\r\n\t\t\t\tmasterBufferLimit: 5,\r\n\t\t\t\tminBufferSize: 2,\r\n\t\t\t\tmaxBufferSize: 3\r\n\t\t\t},\r\n\t\t\t{ name: \"High\", masterBufferLimit: 5, minBufferSize: 3, maxBufferSize: 5 }\r\n\t\t];\r\n\t}\r\n}\r\n\r\nexport default new Config();\r\n"],"sourceRoot":""}